<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>暴雨！大暴雨！新一轮较强降水来袭，这些地方注意</title>
      <link href="/2025/08/27/%E6%9A%B4%E9%9B%A8%EF%BC%81%E5%A4%A7%E6%9A%B4%E9%9B%A8%EF%BC%81%E6%96%B0%E4%B8%80%E8%BD%AE%E8%BE%83%E5%BC%BA%E9%99%8D%E6%B0%B4%E6%9D%A5%E8%A2%AD%EF%BC%8C%E8%BF%99%E4%BA%9B%E5%9C%B0%E6%96%B9%E6%B3%A8%E6%84%8F/"/>
      <url>/2025/08/27/%E6%9A%B4%E9%9B%A8%EF%BC%81%E5%A4%A7%E6%9A%B4%E9%9B%A8%EF%BC%81%E6%96%B0%E4%B8%80%E8%BD%AE%E8%BE%83%E5%BC%BA%E9%99%8D%E6%B0%B4%E6%9D%A5%E8%A2%AD%EF%BC%8C%E8%BF%99%E4%BA%9B%E5%9C%B0%E6%96%B9%E6%B3%A8%E6%84%8F/</url>
      
        <content type="html"><![CDATA[<p>**这几天，北方又迎降水过程。**预计 26 日至 28 日，内蒙古、西北地区东部、华北大部、东北地区东部和南部等地自西向东先后有中到大雨，青海东部、甘肃南部、宁夏、内蒙古河套地区、陕西北部、山西北部、京津冀、辽宁南部和东部等地部分地区有暴雨，局地大暴雨；部分地区还将伴有强对流天气。</p><p><strong>暴雨！大暴雨！</strong></p><p><strong>北方又迎降水过程</strong></p><p><strong>中央气象台今天</strong>18 时<strong>继续</strong>发布暴雨<strong>黄</strong>色预警：预计，<strong>8 月 26 日 20 时至 27 日 20 时，内蒙古中南部、青海东部、甘肃南部、宁夏南部、陕西北部、山西北部、河北中北部、北京、天津西北部以及四川盆地西南部等地部分地区有大到暴雨，其中，内蒙古河套地区东部、河北中北部、北京西部和南部等地局地有大暴雨。上述部分地区伴有短时强降水，局地有雷暴大风等强对流天气。</strong></p><p><strong>8 月 26 日，北京多区密集发布暴雨预警，其中延庆、昌平、怀柔、房山、门头沟发布暴雨红色预警；平谷、密云、海淀、大兴、丰台、石景山发布暴雨橙色预警；朝阳、通州发布暴雨黄色预警。</strong></p><p><strong>北京市气象台预计 26 日夜间至 27 日夜间，北京部分地区将出现 6 小时降雨量 70 毫米以上或 24 小时降雨量 100 毫米以上的强降水，山区及浅山区可能出现山洪、泥石流、滑坡等次生灾害，低洼地区易出现积水，请注意防范。</strong></p><p><strong>气象专家提醒</strong>，26 日至 28 日，北方地区将迎新一轮较强降水过程，部分地区降雨强度大，降雨落区与前期重叠，发生暴雨次生灾害的风险较高。请公众及时关注当地气象部门发布的最新预警预报信息，防范暴雨和强对流天气危害；降雨期间避免前往山区、地质条件脆弱区以及露营地等；外出注意交通安全，路遇涉水路段遵从防汛指示，避免涉险。</p><p><strong>直冲 40℃</strong></p><p><strong>高温盘踞江淮江南</strong></p><p><strong>预计未来一周，江汉、江淮、江南、四川盆地东部等地有持续性高温天气，日最高气温一般有 35～38℃，局地超过 39℃。30 日开始，上述地区高温范围将逐步收缩、强度减弱。</strong></p><p><strong>中央气象台今天 18 时继续发布高温黄色预警：预计 8 月 27 日白天，河南东部和南部、安徽、江苏中南部、上海大部、湖北中东部、湖南大部、江西、浙江中北部、四川盆地中东部、重庆中西部和东北部、广西东南部、广东中部等地有 35℃ 以上高温天气，其中，河南南部、安徽中南部、江苏南部、湖北中东部、湖南北部和东部、江西中北部、浙江中北部、重庆西部等地部分地区最高气温 37～39℃，重庆、湖南东部、江西、浙江西部等地局地最高气温可达 40℃。</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>无限容量网盘代码</title>
      <link href="/2025/08/25/2025.08.19_%E6%97%A0%E9%99%90%E5%AE%B9%E9%87%8F%E7%BD%91%E7%9B%98%E4%BB%A3%E7%A0%81/"/>
      <url>/2025/08/25/2025.08.19_%E6%97%A0%E9%99%90%E5%AE%B9%E9%87%8F%E7%BD%91%E7%9B%98%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br></pre></td><td class="code"><pre><span class="line">const CHUNK_SIZE = 10 * 1024 * 1024; // 10MB</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  async fetch(request, env) &#123;</span><br><span class="line">    const url = new URL(request.url);</span><br><span class="line">    const &#123; pathname &#125; = url;</span><br><span class="line"></span><br><span class="line">    // ---- Basic env checks ----</span><br><span class="line">    const botToken = env.BOT_TOKEN;</span><br><span class="line">    const chatId = env.CHAT_ID;</span><br><span class="line">    if (!botToken || !chatId || !env.UPLOAD_STORE) &#123;</span><br><span class="line">      return new Response(&#x27;Server not configured (missing BOT_TOKEN / CHAT_ID / UPLOAD_STORE).&#x27;, &#123; status: 500 &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // ======== ROUTES ========</span><br><span class="line"></span><br><span class="line">    // 前台上传页</span><br><span class="line">    if (request.method === &#x27;GET&#x27; &amp;&amp; pathname === &#x27;/&#x27;) &#123;</span><br><span class="line">      return noStoreHTML(getUploadFormWithProgress());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 兼容旧路径：/files -&gt; /admin</span><br><span class="line">    if (request.method === &#x27;GET&#x27; &amp;&amp; pathname === &#x27;/files&#x27;) &#123;</span><br><span class="line">      return Response.redirect(`$&#123;url.origin&#125;/admin`, 302);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 后台页面（Basic Auth） ——【标题一致】</span><br><span class="line">    if (request.method === &#x27;GET&#x27; &amp;&amp; pathname === &#x27;/admin&#x27;) &#123;</span><br><span class="line">      const auth = await requireAdmin(request, env);</span><br><span class="line">      if (auth instanceof Response) return auth;</span><br><span class="line">      return noStoreHTML(getAdminPage()); // 禁止缓存</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 后台：文件列表 JSON（Basic Auth）</span><br><span class="line">    if (request.method === &#x27;GET&#x27; &amp;&amp; pathname === &#x27;/api/files&#x27;) &#123;</span><br><span class="line">      const auth = await requireAdmin(request, env);</span><br><span class="line">      if (auth instanceof Response) return auth;</span><br><span class="line"></span><br><span class="line">      const sortBy = url.searchParams.get(&#x27;sort&#x27;) || &#x27;date&#x27;;</span><br><span class="line">      const order = url.searchParams.get(&#x27;order&#x27;) || &#x27;desc&#x27;;</span><br><span class="line">      const files = await listFiles(env.UPLOAD_STORE, sortBy, order);</span><br><span class="line"></span><br><span class="line">      return noStoreJSON(&#123; files &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 初始化上传</span><br><span class="line">    if (request.method === &#x27;POST&#x27; &amp;&amp; pathname === &#x27;/upload/init&#x27;) &#123;</span><br><span class="line">      let payload;</span><br><span class="line">      try &#123; payload = await request.json(); &#125; catch &#123; payload = &#123;&#125;; &#125;</span><br><span class="line">      const &#123; fileName, size, mime &#125; = payload || &#123;&#125;;</span><br><span class="line">      if (!fileName || typeof size !== &#x27;number&#x27;) &#123;</span><br><span class="line">        return json(&#123; error: &#x27;bad init payload&#x27; &#125;, 400);</span><br><span class="line">      &#125;</span><br><span class="line">      const uploadId = crypto.randomUUID();</span><br><span class="line">      const manifest = &#123;</span><br><span class="line">        uploadId, fileName, mime, size,</span><br><span class="line">        parts: [], createdAt: new Date().toISOString(), finished: false</span><br><span class="line">      &#125;;</span><br><span class="line">      await env.UPLOAD_STORE.put(`upload:$&#123;uploadId&#125;`, JSON.stringify(manifest));</span><br><span class="line">      return json(&#123; uploadId, chunkSize: CHUNK_SIZE &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 上传分片/整文件（前端可能根据规则只发 1 片）</span><br><span class="line">    if (request.method === &#x27;POST&#x27; &amp;&amp; pathname === &#x27;/upload/chunk&#x27;) &#123;</span><br><span class="line">      const form = await request.formData();</span><br><span class="line">      const uploadId = form.get(&#x27;uploadId&#x27;);</span><br><span class="line">      const index = Number(form.get(&#x27;index&#x27;));</span><br><span class="line">      const total = Number(form.get(&#x27;total&#x27;));</span><br><span class="line">      const chunk = form.get(&#x27;chunk&#x27;);</span><br><span class="line">      const fName = form.get(&#x27;fileName&#x27;) || &#x27;file&#x27;;</span><br><span class="line"></span><br><span class="line">      if (!uploadId || Number.isNaN(index) || Number.isNaN(total) || !chunk) &#123;</span><br><span class="line">        return json(&#123; error: &#x27;bad chunk payload&#x27; &#125;, 400);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // 发送到 Telegram</span><br><span class="line">      const caption = `$&#123;fName&#125; [part $&#123;index + 1&#125;/$&#123;total&#125;] ($&#123;uploadId&#125;)`;</span><br><span class="line">      const tgResp = await postReq(&#x27;sendDocument&#x27;, [</span><br><span class="line">        &#123; chat_id: env.CHAT_ID &#125;,</span><br><span class="line">        &#123; document: chunk &#125;,</span><br><span class="line">        &#123; caption &#125;,</span><br><span class="line">        &#123; disable_notification: &#x27;true&#x27; &#125;</span><br><span class="line">      ], botToken);</span><br><span class="line">      const tgJson = await tgResp.json().catch(() =&gt; (&#123;&#125;));</span><br><span class="line">      if (!tgResp.ok || !tgJson.ok) &#123;</span><br><span class="line">        return json(&#123; error: &#x27;telegram failed&#x27;, detail: tgJson?.description || &#x27;&#x27; &#125;, 502);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // —— 关键修复：只取“原始文件”的 file_id，避免误取到缩略图等导致合并错误/下载不完整</span><br><span class="line">      const msg = tgJson.result || &#123;&#125;;</span><br><span class="line">      let fileIdCandidate =</span><br><span class="line">        msg.document?.file_id ||</span><br><span class="line">        msg.video?.file_id ||</span><br><span class="line">        msg.audio?.file_id ||</span><br><span class="line">        msg.animation?.file_id ||</span><br><span class="line">        (Array.isArray(msg.photo) &amp;&amp; msg.photo.length ? msg.photo[msg.photo.length - 1].file_id : null);</span><br><span class="line"></span><br><span class="line">      if (!fileIdCandidate) &#123;</span><br><span class="line">        // 兜底（非常少见）：从递归遍历中取最后一个 file_id</span><br><span class="line">        const all = extractFileIds(tgJson);</span><br><span class="line">        fileIdCandidate = all[all.length - 1];</span><br><span class="line">      &#125;</span><br><span class="line">      if (!fileIdCandidate) &#123;</span><br><span class="line">        return json(&#123; error: &#x27;no file_id found in telegram response&#x27; &#125;, 502);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // 再取 file_path</span><br><span class="line">      const fileResp = await postReq(&#x27;getFile&#x27;, [&#123; file_id: fileIdCandidate &#125;], botToken);</span><br><span class="line">      const fileJson = await fileResp.json().catch(() =&gt; (&#123;&#125;));</span><br><span class="line">      if (!fileResp.ok || !fileJson.ok) &#123;</span><br><span class="line">        return json(&#123; error: &#x27;getFile failed&#x27; &#125;, 502);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // 写入分片信息</span><br><span class="line">      const key = `upload:$&#123;uploadId&#125;`;</span><br><span class="line">      const raw = await env.UPLOAD_STORE.get(key);</span><br><span class="line">      if (!raw) return json(&#123; error: &#x27;upload not found&#x27; &#125;, 404);</span><br><span class="line">      const manifest = JSON.parse(raw);</span><br><span class="line">      if (manifest.finished) return json(&#123; error: &#x27;already finished&#x27; &#125;, 409);</span><br><span class="line"></span><br><span class="line">      const partRecord = &#123;</span><br><span class="line">        index,</span><br><span class="line">        file_id: fileIdCandidate,</span><br><span class="line">        file_path: fileJson.result.file_path,</span><br><span class="line">        size: chunk.size // 记录真实片大小，后续用于 Range 映射</span><br><span class="line">      &#125;;</span><br><span class="line">      const existingIdx = manifest.parts.findIndex(p =&gt; p.index === index);</span><br><span class="line">      if (existingIdx &gt;= 0) manifest.parts[existingIdx] = partRecord;</span><br><span class="line">      else manifest.parts.push(partRecord);</span><br><span class="line"></span><br><span class="line">      await env.UPLOAD_STORE.put(key, JSON.stringify(manifest));</span><br><span class="line">      return json(&#123; ok: true &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 完成上传（登记 file: 记录）</span><br><span class="line">    if (request.method === &#x27;POST&#x27; &amp;&amp; pathname === &#x27;/upload/complete&#x27;) &#123;</span><br><span class="line">      let payload;</span><br><span class="line">      try &#123; payload = await request.json(); &#125; catch &#123; payload = &#123;&#125;; &#125;</span><br><span class="line">      const &#123; uploadId, total &#125; = payload || &#123;&#125;;</span><br><span class="line">      const key = `upload:$&#123;uploadId&#125;`;</span><br><span class="line">      const raw = await env.UPLOAD_STORE.get(key);</span><br><span class="line">      if (!raw) return json(&#123; error: &#x27;upload not found&#x27; &#125;, 404);</span><br><span class="line"></span><br><span class="line">      const manifest = JSON.parse(raw);</span><br><span class="line">      if (manifest.parts.length !== total) &#123;</span><br><span class="line">        return json(&#123; error: &#x27;parts mismatch&#x27;, have: manifest.parts.length, expect: total &#125;, 409);</span><br><span class="line">      &#125;</span><br><span class="line">      manifest.parts.sort((a, b) =&gt; a.index - b.index);</span><br><span class="line">      manifest.finished = true;</span><br><span class="line">      await env.UPLOAD_STORE.put(key, JSON.stringify(manifest));</span><br><span class="line"></span><br><span class="line">      const recordKey = `file:$&#123;uploadId&#125;`;</span><br><span class="line">      const totalSize = calcTotalSize(manifest);</span><br><span class="line">      const display = &#123;</span><br><span class="line">        key: recordKey,</span><br><span class="line">        uploadId,</span><br><span class="line">        title: manifest.fileName,</span><br><span class="line">        fileName: manifest.fileName,</span><br><span class="line">        fileType: getFileType(manifest.fileName || &#x27;&#x27;),</span><br><span class="line">        size: totalSize,</span><br><span class="line">        downloadUrl: `$&#123;url.origin&#125;/download/$&#123;uploadId&#125;`,</span><br><span class="line">        previewUrl: `$&#123;url.origin&#125;/preview/$&#123;uploadId&#125;`,</span><br><span class="line">        uploadDate: new Date().toISOString(),</span><br><span class="line">        chunked: manifest.parts.length &gt; 1,</span><br><span class="line">        parts: manifest.parts.length,</span><br><span class="line">        mime: manifest.mime || &#x27;application/octet-stream&#x27;</span><br><span class="line">      &#125;;</span><br><span class="line">      await env.UPLOAD_STORE.put(recordKey, JSON.stringify(display));</span><br><span class="line"></span><br><span class="line">      return json(&#123; ok: true, downloadUrl: display.downloadUrl, previewUrl: display.previewUrl &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 下载（attachment）——【完整下载 + 保留原文件名；支持 Range/断点】</span><br><span class="line">    if (request.method === &#x27;GET&#x27; &amp;&amp; pathname.startsWith(&#x27;/download/&#x27;)) &#123;</span><br><span class="line">      const uploadId = pathname.split(&#x27;/&#x27;)[2];</span><br><span class="line">      return mergeAndRespond(uploadId, env, botToken, &#x27;attachment&#x27;, request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 预览（inline，支持视频播放器 Range 播放）</span><br><span class="line">    if (request.method === &#x27;GET&#x27; &amp;&amp; pathname.startsWith(&#x27;/preview/&#x27;)) &#123;</span><br><span class="line">      const uploadId = pathname.split(&#x27;/&#x27;)[2];</span><br><span class="line">      return mergeAndRespond(uploadId, env, botToken, &#x27;inline&#x27;, request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 删除（Basic Auth）</span><br><span class="line">    if (request.method === &#x27;DELETE&#x27; &amp;&amp; pathname.startsWith(&#x27;/delete/&#x27;)) &#123;</span><br><span class="line">      const auth = await requireAdmin(request, env);</span><br><span class="line">      if (auth instanceof Response) return auth;</span><br><span class="line"></span><br><span class="line">      const key = decodeURIComponent(pathname.slice(&#x27;/delete/&#x27;.length));</span><br><span class="line">      await env.UPLOAD_STORE.delete(key);</span><br><span class="line">      if (key.startsWith(&#x27;file:&#x27;)) &#123;</span><br><span class="line">        const uploadId = key.slice(&#x27;file:&#x27;.length);</span><br><span class="line">        await env.UPLOAD_STORE.delete(`upload:$&#123;uploadId&#125;`);</span><br><span class="line">      &#125;</span><br><span class="line">      return noStoreJSON(&#123; success: true &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return new Response(&#x27;Not Found&#x27;, &#123; status: 404 &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// ============= Helpers =============</span><br><span class="line"></span><br><span class="line">function json(obj, status = 200) &#123;</span><br><span class="line">  return new Response(JSON.stringify(obj), &#123;</span><br><span class="line">    status,</span><br><span class="line">    headers: &#123; &#x27;Content-Type&#x27;: &#x27;application/json; charset=utf-8&#x27; &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 禁止缓存（JSON）</span><br><span class="line">function noStoreJSON(obj, status = 200) &#123;</span><br><span class="line">  return new Response(JSON.stringify(obj), &#123;</span><br><span class="line">    status,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      &#x27;Content-Type&#x27;: &#x27;application/json; charset=utf-8&#x27;,</span><br><span class="line">      &#x27;Cache-Control&#x27;: &#x27;no-store, no-cache, must-revalidate&#x27;,</span><br><span class="line">      &#x27;Pragma&#x27;: &#x27;no-cache&#x27;,</span><br><span class="line">      &#x27;Expires&#x27;: &#x27;0&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 禁止缓存（HTML）</span><br><span class="line">function noStoreHTML(html, status = 200) &#123;</span><br><span class="line">  return new Response(html, &#123;</span><br><span class="line">    status,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      &#x27;Content-Type&#x27;: &#x27;text/html; charset=utf-8&#x27;,</span><br><span class="line">      &#x27;Cache-Control&#x27;: &#x27;no-store, no-cache, must-revalidate&#x27;,</span><br><span class="line">      &#x27;Pragma&#x27;: &#x27;no-cache&#x27;,</span><br><span class="line">      &#x27;Expires&#x27;: &#x27;0&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Basic Auth 校验：设置了 ADMIN_USER/ADMIN_PASS 才启用；未设置则放行</span><br><span class="line">async function requireAdmin(request, env) &#123;</span><br><span class="line">  if (!env.ADMIN_USER || !env.ADMIN_PASS) return true;</span><br><span class="line"></span><br><span class="line">  const hdr = request.headers.get(&#x27;Authorization&#x27;) || &#x27;&#x27;;</span><br><span class="line">  const need = new Response(&#x27;Unauthorized&#x27;, &#123;</span><br><span class="line">    status: 401,</span><br><span class="line">    headers: &#123; &#x27;WWW-Authenticate&#x27;: &#x27;Basic realm=&quot;Admin&quot;, charset=&quot;UTF-8&quot;&#x27; &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  if (!hdr.startsWith(&#x27;Basic &#x27;)) return need;</span><br><span class="line">  try &#123;</span><br><span class="line">    const decoded = atob(hdr.slice(6));</span><br><span class="line">    const idx = decoded.indexOf(&#x27;:&#x27;);</span><br><span class="line">    if (idx &lt; 0) return need;</span><br><span class="line">    const user = decoded.slice(0, idx);</span><br><span class="line">    const pass = decoded.slice(idx + 1);</span><br><span class="line">    if (user === env.ADMIN_USER &amp;&amp; pass === env.ADMIN_PASS) return true;</span><br><span class="line">    return need;</span><br><span class="line">  &#125; catch &#123;</span><br><span class="line">    return need;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function getFileType(fileName) &#123;</span><br><span class="line">  const ext = (fileName.split(&#x27;.&#x27;).pop() || &#x27;&#x27;).toLowerCase();</span><br><span class="line">  const map = &#123;</span><br><span class="line">    pdf: &#x27;PDF Document&#x27;,</span><br><span class="line">    doc: &#x27;Word Document&#x27;,</span><br><span class="line">    docx: &#x27;Word Document&#x27;,</span><br><span class="line">    xls: &#x27;Excel Spreadsheet&#x27;,</span><br><span class="line">    xlsx: &#x27;Excel Spreadsheet&#x27;,</span><br><span class="line">    jpg: &#x27;Image&#x27;, jpeg: &#x27;Image&#x27;, png: &#x27;Image&#x27;, gif: &#x27;Image&#x27;, webp: &#x27;Image&#x27;,</span><br><span class="line">    zip: &#x27;Archive&#x27;, rar: &#x27;Archive&#x27;, &#x27;7z&#x27;: &#x27;Archive&#x27;,</span><br><span class="line">    txt: &#x27;Text File&#x27;, md: &#x27;Text File&#x27;,</span><br><span class="line">    mp4: &#x27;Video&#x27;, webm: &#x27;Video&#x27;, mov: &#x27;Video&#x27;,</span><br><span class="line">    mp3: &#x27;Audio&#x27;, wav: &#x27;Audio&#x27;, m4a: &#x27;Audio&#x27;</span><br><span class="line">  &#125;;</span><br><span class="line">  return map[ext] || &#x27;Other&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function listFiles(kv, sortBy = &#x27;date&#x27;, order = &#x27;desc&#x27;) &#123;</span><br><span class="line">  const list = await kv.list();</span><br><span class="line">  const files = [];</span><br><span class="line">  for (const key of list.keys) &#123;</span><br><span class="line">    if (!key.name.startsWith(&#x27;file:&#x27;)) continue;</span><br><span class="line">    const value = await kv.get(key.name);</span><br><span class="line">    if (value) files.push(&#123; ...JSON.parse(value), key: key.name &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  files.sort((a, b) =&gt; &#123;</span><br><span class="line">    switch (sortBy) &#123;</span><br><span class="line">      case &#x27;name&#x27;: return order === &#x27;asc&#x27; ? a.title.localeCompare(b.title) : b.title.localeCompare(a.title);</span><br><span class="line">      case &#x27;type&#x27;: return order === &#x27;asc&#x27; ? a.fileType.localeCompare(b.fileType) : b.fileType.localeCompare(a.fileType);</span><br><span class="line">      case &#x27;size&#x27;: return order === &#x27;asc&#x27; ? (a.size - b.size) : (b.size - a.size);</span><br><span class="line">      case &#x27;date&#x27;:</span><br><span class="line">      default:</span><br><span class="line">        return order === &#x27;asc&#x27;</span><br><span class="line">          ? new Date(a.uploadDate) - new Date(b.uploadDate)</span><br><span class="line">          : new Date(b.uploadDate) - new Date(a.uploadDate);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  return files;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function postReq(url, fields, botToken) &#123;</span><br><span class="line">  const formData = new FormData();</span><br><span class="line">  fields.forEach(obj =&gt; &#123; for (let k in obj) formData.append(k, obj[k]); &#125;);</span><br><span class="line">  return fetch(`https://api.telegram.org/bot$&#123;botToken&#125;/$&#123;url&#125;`, &#123; method: &#x27;POST&#x27;, body: formData &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function extractFileIds(obj) &#123;</span><br><span class="line">  const out = [];</span><br><span class="line">  (function dfs(x) &#123;</span><br><span class="line">    if (x &amp;&amp; typeof x === &#x27;object&#x27;) &#123;</span><br><span class="line">      if (x.file_id) out.push(x.file_id);</span><br><span class="line">      Object.values(x).forEach(dfs);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)(obj);</span><br><span class="line">  return [...new Set(out)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// === 核心：合并并响应，支持 Range（在线播放/断点下载） ===</span><br><span class="line">async function mergeAndRespond(uploadId, env, botToken, disposition, request) &#123;</span><br><span class="line">  const manRaw = await env.UPLOAD_STORE.get(`upload:$&#123;uploadId&#125;`);</span><br><span class="line">  if (!manRaw) return new Response(&#x27;Not Found&#x27;, &#123; status: 404 &#125;);</span><br><span class="line"></span><br><span class="line">  const manifest = JSON.parse(manRaw);</span><br><span class="line">  if (!manifest.finished || !manifest.parts?.length) &#123;</span><br><span class="line">    return new Response(&#x27;File not ready&#x27;, &#123; status: 409 &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  manifest.parts.sort((a, b) =&gt; a.index - b.index);</span><br><span class="line"></span><br><span class="line">  const totalSize = calcTotalSize(manifest);</span><br><span class="line">  const filename = manifest.fileName || `file-$&#123;uploadId&#125;`;</span><br><span class="line">  const encoded = encodeRFC5987ValueChars(filename);</span><br><span class="line">  const mime = manifest.mime || &#x27;application/octet-stream&#x27;;</span><br><span class="line"></span><br><span class="line">  // 解析 Range</span><br><span class="line">  const rangeHeader = request.headers.get(&#x27;Range&#x27;);</span><br><span class="line">  let start = 0, end = totalSize ? totalSize - 1 : undefined;</span><br><span class="line">  let status = 200;</span><br><span class="line"></span><br><span class="line">  if (rangeHeader &amp;&amp; totalSize) &#123;</span><br><span class="line">    const m = /^bytes=(\d*)-(\d*)$/.exec(rangeHeader);</span><br><span class="line">    if (m) &#123;</span><br><span class="line">      const s = m[1] ? parseInt(m[1], 10) : 0;</span><br><span class="line">      const e = m[2] ? parseInt(m[2], 10) : (totalSize - 1);</span><br><span class="line">      if (Number.isFinite(s) &amp;&amp; Number.isFinite(e) &amp;&amp; s &lt;= e &amp;&amp; e &lt; totalSize) &#123;</span><br><span class="line">        start = s; end = e; status = 206;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const stream = new ReadableStream(&#123;</span><br><span class="line">    async start(controller) &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        await pipeRangeFromParts(controller, manifest.parts, botToken, start, end);</span><br><span class="line">        controller.close();</span><br><span class="line">      &#125; catch (e) &#123;</span><br><span class="line">        controller.error(e);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  const headers = new Headers(&#123;</span><br><span class="line">    &#x27;Content-Type&#x27;: mime,</span><br><span class="line">    &#x27;Accept-Ranges&#x27;: &#x27;bytes&#x27;,</span><br><span class="line">    &#x27;Content-Disposition&#x27;: `$&#123;disposition&#125;; filename=&quot;$&#123;sanitizeFilename(filename)&#125;&quot;; filename*=UTF-8&#x27;&#x27;$&#123;encoded&#125;`,</span><br><span class="line">    &#x27;Cache-Control&#x27;: disposition === &#x27;inline&#x27; ? &#x27;public, max-age=3600, immutable&#x27; : &#x27;no-store&#x27;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  if (typeof totalSize === &#x27;number&#x27;) &#123;</span><br><span class="line">    if (status === 206) &#123;</span><br><span class="line">      headers.set(&#x27;Content-Range&#x27;, `bytes $&#123;start&#125;-$&#123;end&#125;/$&#123;totalSize&#125;`);</span><br><span class="line">      headers.set(&#x27;Content-Length&#x27;, String(end - start + 1));</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      headers.set(&#x27;Content-Length&#x27;, String(totalSize));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  return new Response(stream, &#123; status, headers &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 将指定区间 [start, end] 从多个分片顺序写入 controller</span><br><span class="line">async function pipeRangeFromParts(controller, parts, botToken, start, end) &#123;</span><br><span class="line">  let offset = 0;</span><br><span class="line">  const ranges = parts.map(p =&gt; &#123;</span><br><span class="line">    const size = Number(p.size) || 0;</span><br><span class="line">    const r = &#123; part: p, start: offset, end: offset + size - 1, size &#125;;</span><br><span class="line">    offset += size;</span><br><span class="line">    return r;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  for (const r of ranges) &#123;</span><br><span class="line">    if (r.size &lt;= 0) continue;</span><br><span class="line">    if (r.end &lt; start) continue;</span><br><span class="line">    if (r.start &gt; end) break;</span><br><span class="line"></span><br><span class="line">    const localStart = Math.max(0, start - r.start);</span><br><span class="line">    const localEnd = Math.min(r.size - 1, end - r.start);</span><br><span class="line">    const needBytes = localEnd - localStart + 1;</span><br><span class="line">    if (needBytes &lt;= 0) continue;</span><br><span class="line"></span><br><span class="line">    const tgUrl = `https://api.telegram.org/file/bot$&#123;botToken&#125;/$&#123;r.part.file_path&#125;`;</span><br><span class="line"></span><br><span class="line">    // —— 优先尝试 Range 请求上游，若不支持则回退到 200 全量再本地跳过</span><br><span class="line">    const tryRange = localStart &gt; 0 || localEnd &lt; r.size - 1;</span><br><span class="line">    const rangeHeaders = tryRange ? &#123; &#x27;Range&#x27;: `bytes=$&#123;localStart&#125;-$&#123;localEnd&#125;` &#125; : undefined;</span><br><span class="line">    let resp = await fetch(tgUrl, &#123; headers: rangeHeaders &#125;);</span><br><span class="line">    if (!resp.ok || !resp.body) &#123;</span><br><span class="line">      // 回退一次（无 Range）</span><br><span class="line">      resp = await fetch(tgUrl);</span><br><span class="line">      if (!resp.ok || !resp.body) throw new Error(&#x27;fetch part failed&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    const reader = resp.body.getReader();</span><br><span class="line">    let toSkip = resp.status === 206 ? 0 : localStart; // 若上游已 Range，就不需要本地跳过</span><br><span class="line">    let sent = 0;</span><br><span class="line"></span><br><span class="line">    // 跳过前缀（当上游 200 未 Range 时）</span><br><span class="line">    while (toSkip &gt; 0) &#123;</span><br><span class="line">      const &#123; value, done &#125; = await reader.read();</span><br><span class="line">      if (done) break;</span><br><span class="line">      if (value.byteLength &lt;= toSkip) &#123;</span><br><span class="line">        toSkip -= value.byteLength;</span><br><span class="line">        continue;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        const slice = value.slice(toSkip);</span><br><span class="line">        const toSend = Math.min(slice.byteLength, needBytes - sent);</span><br><span class="line">        if (toSend &gt; 0) controller.enqueue(slice.slice(0, toSend));</span><br><span class="line">        sent += toSend;</span><br><span class="line">        toSkip = 0;</span><br><span class="line">        if (sent &gt;= needBytes) &#123;</span><br><span class="line">          // 读够了，取消上游读取，释放连接</span><br><span class="line">          try &#123; await reader.cancel(); &#125; catch &#123;&#125;</span><br><span class="line">          break;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 正常发送阶段</span><br><span class="line">    while (sent &lt; needBytes) &#123;</span><br><span class="line">      const &#123; value, done &#125; = await reader.read();</span><br><span class="line">      if (done) break;</span><br><span class="line">      const toSend = Math.min(value.byteLength, needBytes - sent);</span><br><span class="line">      if (toSend &gt; 0) controller.enqueue(value.slice(0, toSend));</span><br><span class="line">      sent += toSend;</span><br><span class="line"></span><br><span class="line">      if (toSend &lt; value.byteLength || sent &gt;= needBytes) &#123;</span><br><span class="line">        // 已够，取消剩余</span><br><span class="line">        try &#123; await reader.cancel(); &#125; catch &#123;&#125;</span><br><span class="line">        break;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function calcTotalSize(manifest) &#123;</span><br><span class="line">  if (manifest?.parts?.length) &#123;</span><br><span class="line">    const s = manifest.parts.reduce((n, p) =&gt; n + (Number(p.size) || 0), 0);</span><br><span class="line">    return s || Number(manifest.size) || undefined;</span><br><span class="line">  &#125;</span><br><span class="line">  return Number(manifest.size) || undefined;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function sanitizeFilename(name) &#123;</span><br><span class="line">  // 保留原名用于 filename（尽量不转义），仅去除换行与引号</span><br><span class="line">  return String(name).replace(/[\r\n&quot;]/g, &#x27;_&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">function encodeRFC5987ValueChars(str) &#123;</span><br><span class="line">  return encodeURIComponent(str)</span><br><span class="line">    .replace(/[&#x27;()*]/g, c =&gt; &#x27;%&#x27; + c.charCodeAt(0).toString(16))</span><br><span class="line">    .replace(/%(7C|60|5E)/g, (m, hex) =&gt; &#x27;%&#x27; + hex.toLowerCase());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// ============= Frontend (HTML) =============</span><br><span class="line"></span><br><span class="line">// 前台上传页（多文件 + 并发 + 智能分片；标题与站名一致）</span><br><span class="line">function getUploadFormWithProgress() &#123;</span><br><span class="line">  return `&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;/&gt;</span><br><span class="line">&lt;title&gt;无限制容量网盘-更多项目：www.l42.cn&lt;/title&gt;</span><br><span class="line">&lt;link href=&quot;https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .upload-area &#123; border: 2px dashed #4F46E5; &#125;</span><br><span class="line">  .upload-area.dragging &#123; background: rgba(79,70,229,0.1); &#125;</span><br><span class="line">  .icon-btn &#123; display:inline-flex; align-items:center; gap:.5rem; &#125;</span><br><span class="line">  .ext-link &#123; text-decoration: underline dotted; &#125;</span><br><span class="line">  .file-row &#123; border:1px solid rgba(255,255,255,.08); &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body class=&quot;bg-gray-900 min-h-screen&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;container mx-auto px-4 py-8&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;max-w-3xl mx-auto bg-gray-800 rounded-lg shadow-xl p-8&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;flex items-center justify-between mb-6&quot;&gt;</span><br><span class="line">        &lt;h1 class=&quot;text-2xl font-bold text-white&quot;&gt;无限制容量网盘-更多项目：www.l42.cn&lt;/h1&gt;</span><br><span class="line">        &lt;div class=&quot;flex items-center gap-3&quot;&gt;</span><br><span class="line">          &lt;a class=&quot;icon-btn text-gray-200 hover:text-white&quot; href=&quot;https://github.com/ddnsmax/Unlimited-cloud-storage&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;</span><br><span class="line">            $&#123;svgGithub()&#125; &lt;span class=&quot;hidden sm:inline ext-link&quot;&gt;GitHub&lt;/span&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;icon-btn text-gray-200 hover:text-white&quot; href=&quot;https://www.l42.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;</span><br><span class="line">            $&#123;svgLink()&#125; &lt;span class=&quot;hidden sm:inline ext-link&quot;&gt;开发者博客&lt;/span&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;form class=&quot;space-y-6&quot; id=&quot;uploadForm&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;upload-area rounded-lg p-8 text-center cursor-pointer&quot; id=&quot;dropZone&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;space-y-4&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;text-4xl&quot;&gt;📁&lt;/span&gt;</span><br><span class="line">            &lt;p class=&quot;text-white text-lg&quot;&gt;拖拽文件到这里，或点击选择（可多选）&lt;/p&gt;</span><br><span class="line">            &lt;p class=&quot;text-gray-400 text-sm&quot;&gt;智能分片：视频≤50MB、图片≤10MB不分片；其余/超限按10MB分片&lt;/p&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;fileInput&quot; multiple class=&quot;hidden&quot;&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div id=&quot;filesList&quot; class=&quot;space-y-3&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class=&quot;flex flex-wrap justify-between gap-3&quot;&gt;</span><br><span class="line">          &lt;button type=&quot;submit&quot; id=&quot;uploadBtn&quot; class=&quot;bg-indigo-600 text-white px-6 py-2 rounded hover:bg-indigo-700 transition disabled:opacity-50&quot; disabled&gt;</span><br><span class="line">            开始上传</span><br><span class="line">          &lt;/button&gt;</span><br><span class="line">          &lt;a href=&quot;/admin&quot; class=&quot;bg-gray-600 text-white px-6 py-2 rounded hover:bg-gray-700 transition&quot;&gt;后台管理&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div id=&quot;copyLinkSection&quot; class=&quot;hidden mt-4&quot;&gt;</span><br><span class="line">          &lt;p class=&quot;text-white mb-2&quot;&gt;上传完成的文件链接：&lt;/p&gt;</span><br><span class="line">          &lt;div id=&quot;linksWrap&quot; class=&quot;grid gap-3&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">const CHUNK_SIZE = $&#123;CHUNK_SIZE&#125;;</span><br><span class="line">const dropZone = document.getElementById(&#x27;dropZone&#x27;);</span><br><span class="line">const fileInput = document.getElementById(&#x27;fileInput&#x27;);</span><br><span class="line">const filesList = document.getElementById(&#x27;filesList&#x27;);</span><br><span class="line">const uploadBtn = document.getElementById(&#x27;uploadBtn&#x27;);</span><br><span class="line">const uploadForm = document.getElementById(&#x27;uploadForm&#x27;);</span><br><span class="line">const copyLinkSection = document.getElementById(&#x27;copyLinkSection&#x27;);</span><br><span class="line">const linksWrap = document.getElementById(&#x27;linksWrap&#x27;);</span><br><span class="line"></span><br><span class="line">let selected = []; // &#123;file, id, status, rowEl, progressEl, speedEl, done:false&#125;</span><br><span class="line"></span><br><span class="line">dropZone.addEventListener(&#x27;click&#x27;, () =&gt; fileInput.click());</span><br><span class="line">dropZone.addEventListener(&#x27;dragover&#x27;, (e) =&gt; &#123; e.preventDefault(); dropZone.classList.add(&#x27;dragging&#x27;); &#125;);</span><br><span class="line">dropZone.addEventListener(&#x27;dragleave&#x27;, () =&gt; dropZone.classList.remove(&#x27;dragging&#x27;));</span><br><span class="line">dropZone.addEventListener(&#x27;drop&#x27;, (e) =&gt; &#123;</span><br><span class="line">  e.preventDefault(); dropZone.classList.remove(&#x27;dragging&#x27;);</span><br><span class="line">  if (e.dataTransfer.files.length) &#123;</span><br><span class="line">    addFiles([...e.dataTransfer.files]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">fileInput.addEventListener(&#x27;change&#x27;, (e) =&gt; &#123; if (e.target.files.length) addFiles([...e.target.files]); &#125;);</span><br><span class="line"></span><br><span class="line">function addFiles(files)&#123;</span><br><span class="line">  // 不清空原有文件，允许追加</span><br><span class="line">  for(const f of files)&#123;</span><br><span class="line">    const id = crypto.randomUUID();</span><br><span class="line">    const row = document.createElement(&#x27;div&#x27;);</span><br><span class="line">    row.className = &#x27;file-row bg-gray-700 p-4 rounded-lg&#x27;;</span><br><span class="line">    row.innerHTML = \`</span><br><span class="line">      &lt;div class=&quot;flex items-center justify-between gap-3&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;min-w-0&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;text-white font-medium truncate&quot;&gt;\$&#123;f.name&#125;&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;text-gray-300 text-xs mt-1&quot;&gt;\$&#123;formatFileSize(f.size)&#125; · \$&#123;f.type || &#x27;application/octet-stream&#x27;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;button type=&quot;button&quot; class=&quot;text-red-300 hover:text-red-200 shrink-0&quot; data-act=&quot;remove&quot;&gt;移除&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;mt-3&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;w-full bg-gray-600 rounded h-3 overflow-hidden&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;h-3 bg-indigo-500&quot; style=&quot;width:0%&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;flex justify-between text-xs text-gray-300 mt-1&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;status&quot;&gt;待上传&lt;/span&gt;</span><br><span class="line">          &lt;span class=&quot;speed&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;\`;</span><br><span class="line">    filesList.appendChild(row);</span><br><span class="line">    const progressEl = row.querySelector(&#x27;.h-3&#x27;);</span><br><span class="line">    const statusEl = row.querySelector(&#x27;.status&#x27;);</span><br><span class="line">    const speedEl = row.querySelector(&#x27;.speed&#x27;);</span><br><span class="line">    row.addEventListener(&#x27;click&#x27;,(ev)=&gt;&#123;</span><br><span class="line">      if(ev.target &amp;&amp; ev.target.getAttribute(&#x27;data-act&#x27;)===&#x27;remove&#x27;)&#123;</span><br><span class="line">        // 若已完成则仅从列表移除；若正在上传则不允许</span><br><span class="line">        const idx = selected.findIndex(x=&gt;x.id===id);</span><br><span class="line">        if(idx&gt;=0 &amp;&amp; !selected[idx].uploading)&#123;</span><br><span class="line">          selected.splice(idx,1);</span><br><span class="line">          row.remove();</span><br><span class="line">          uploadBtn.disabled = selected.filter(x=&gt;!x.done).length===0;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    selected.push(&#123; file:f, id, rowEl:row, progressEl, statusEl, speedEl, done:false, uploading:false &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  uploadBtn.disabled = selected.filter(x=&gt;!x.done).length===0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function formatFileSize(bytes) &#123;</span><br><span class="line">  if (bytes === 0) return &#x27;0 Bytes&#x27;;</span><br><span class="line">  const k = 1024, sizes = [&#x27;Bytes&#x27;,&#x27;KB&#x27;,&#x27;MB&#x27;,&#x27;GB&#x27;,&#x27;TB&#x27;];</span><br><span class="line">  const i = Math.floor(Math.log(bytes)/Math.log(k));</span><br><span class="line">  return (bytes/Math.pow(k,i)).toFixed(2) + &#x27; &#x27; + sizes[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function humanSpeed(bps) &#123;</span><br><span class="line">  const units = [&#x27;B/s&#x27;,&#x27;KB/s&#x27;,&#x27;MB/s&#x27;,&#x27;GB/s&#x27;];</span><br><span class="line">  let idx = 0;</span><br><span class="line">  while (bps &gt;= 1024 &amp;&amp; idx &lt; units.length-1) &#123; bps /= 1024; idx++; &#125;</span><br><span class="line">  return bps.toFixed(1) + &#x27; &#x27; + units[idx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function needChunk(file)&#123;</span><br><span class="line">  // 规则：视频≤50MB不分片；图片≤10MB不分片；其余/超限按10MB分片</span><br><span class="line">  const isVideo = (file.type||&#x27;&#x27;).startsWith(&#x27;video/&#x27;);</span><br><span class="line">  const isImage = (file.type||&#x27;&#x27;).startsWith(&#x27;image/&#x27;);</span><br><span class="line">  if (isVideo) return file.size &gt; 50*1024*1024;</span><br><span class="line">  if (isImage) return file.size &gt; 10*1024*1024;</span><br><span class="line">  return true; // 其他类型始终分片</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function uploadOne(entry)&#123;</span><br><span class="line">  const file = entry.file;</span><br><span class="line">  entry.uploading = true;</span><br><span class="line">  entry.statusEl.textContent = &#x27;初始化...&#x27;;</span><br><span class="line">  const initResp = await fetch(&#x27;/upload/init&#x27;, &#123;</span><br><span class="line">    method: &#x27;POST&#x27;,</span><br><span class="line">    headers: &#123; &#x27;Content-Type&#x27;: &#x27;application/json&#x27; &#125;,</span><br><span class="line">    body: JSON.stringify(&#123; fileName: file.name, size: file.size, mime: file.type &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">  const initData = await initResp.json().catch(()=&gt; (&#123;&#125;));</span><br><span class="line">  if (!initResp.ok || !initData.uploadId) throw new Error(&#x27;初始化失败&#x27;);</span><br><span class="line">  const uploadId = initData.uploadId;</span><br><span class="line">  const chunking = needChunk(file);</span><br><span class="line">  const chunkSize = chunking ? (initData.chunkSize || CHUNK_SIZE) : file.size; // 不分片：整个文件一次发送</span><br><span class="line">  const total = Math.ceil(file.size / chunkSize);</span><br><span class="line"></span><br><span class="line">  let uploadedBytes = 0;</span><br><span class="line">  let lastTime = Date.now();</span><br><span class="line">  let lastUploaded = 0;</span><br><span class="line"></span><br><span class="line">  for (let i = 0; i &lt; total; i++) &#123;</span><br><span class="line">    const start = i * chunkSize;</span><br><span class="line">    const end = Math.min(start + chunkSize, file.size);</span><br><span class="line">    const blob = file.slice(start, end);</span><br><span class="line"></span><br><span class="line">    await new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">      const xhr = new XMLHttpRequest();</span><br><span class="line">      xhr.open(&#x27;POST&#x27;, &#x27;/upload/chunk&#x27;);</span><br><span class="line">      xhr.onload = () =&gt; &#123;</span><br><span class="line">        if (xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300) &#123;</span><br><span class="line">          uploadedBytes += blob.size;</span><br><span class="line">          resolve();</span><br><span class="line">        &#125; else reject(new Error(&#x27;分片上传失败&#x27;));</span><br><span class="line">      &#125;;</span><br><span class="line">      xhr.onerror = () =&gt; reject(new Error(&#x27;网络错误&#x27;));</span><br><span class="line"></span><br><span class="line">      xhr.upload.onprogress = (ev) =&gt; &#123;</span><br><span class="line">        const currentSent = ev.lengthComputable ? ev.loaded : 0;</span><br><span class="line">        const overall = Math.min((uploadedBytes + currentSent) / file.size * 100, 100);</span><br><span class="line">        entry.progressEl.style.width = overall.toFixed(2) + &#x27;%&#x27;;</span><br><span class="line">        entry.statusEl.textContent = \`\$&#123;overall.toFixed(2)&#125;%\`;</span><br><span class="line"></span><br><span class="line">        const now = Date.now();</span><br><span class="line">        if (now - lastTime &gt;= 500) &#123;</span><br><span class="line">          const bytesSince = (uploadedBytes + currentSent) - lastUploaded;</span><br><span class="line">          const bps = bytesSince / ((now - lastTime)/1000);</span><br><span class="line">          entry.speedEl.textContent = humanSpeed(bps);</span><br><span class="line">          lastTime = now; lastUploaded = uploadedBytes + currentSent;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      const form = new FormData();</span><br><span class="line">      form.append(&#x27;uploadId&#x27;, uploadId);</span><br><span class="line">      form.append(&#x27;index&#x27;, String(i));</span><br><span class="line">      form.append(&#x27;total&#x27;, String(total));</span><br><span class="line">      form.append(&#x27;fileName&#x27;, file.name);</span><br><span class="line">      // 即便不分片，这里也发 1 片（整文件）</span><br><span class="line">      form.append(&#x27;chunk&#x27;, blob, chunking ? \`\$&#123;file.name&#125;.part\$&#123;i&#125;\` : file.name);</span><br><span class="line">      xhr.send(form);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  entry.statusEl.textContent = &#x27;合并登记...&#x27;;</span><br><span class="line">  const completeResp = await fetch(&#x27;/upload/complete&#x27;, &#123;</span><br><span class="line">    method: &#x27;POST&#x27;,</span><br><span class="line">    headers: &#123; &#x27;Content-Type&#x27;: &#x27;application/json&#x27; &#125;,</span><br><span class="line">    body: JSON.stringify(&#123; uploadId, total &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">  const completeData = await completeResp.json().catch(()=&gt; (&#123;&#125;));</span><br><span class="line">  if (!completeResp.ok || !completeData.downloadUrl) throw new Error(&#x27;完成失败&#x27;);</span><br><span class="line"></span><br><span class="line">  // 展示链接，不清空原文件</span><br><span class="line">  const item = document.createElement(&#x27;div&#x27;);</span><br><span class="line">  item.className = &#x27;grid gap-1&#x27;;</span><br><span class="line">  item.innerHTML = \`</span><br><span class="line">    &lt;div class=&quot;text-gray-200 text-sm&quot;&gt;文件：&lt;span class=&quot;font-medium&quot;&gt;\$&#123;file.name&#125;&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;flex items-center gap-2&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; value=&quot;\$&#123;completeData.downloadUrl&#125;&quot; readonly class=&quot;flex-1 bg-gray-700 text-white p-2 rounded&quot;&gt;</span><br><span class="line">      &lt;button type=&quot;button&quot; class=&quot;copyBtn bg-indigo-600 text-white px-3 py-2 rounded hover:bg-indigo-700&quot; data-val=&quot;\$&#123;completeData.downloadUrl&#125;&quot;&gt;复制下载&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;flex items-center gap-2&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; value=&quot;\$&#123;completeData.previewUrl&#125;&quot; readonly class=&quot;flex-1 bg-gray-700 text-white p-2 rounded&quot;&gt;</span><br><span class="line">      &lt;button type=&quot;button&quot; class=&quot;copyBtn bg-indigo-600 text-white px-3 py-2 rounded hover:bg-indigo-700&quot; data-val=&quot;\$&#123;completeData.previewUrl&#125;&quot;&gt;复制预览&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;\`;</span><br><span class="line">  linksWrap.appendChild(item);</span><br><span class="line">  copyLinkSection.classList.remove(&#x27;hidden&#x27;);</span><br><span class="line">  item.querySelectorAll(&#x27;.copyBtn&#x27;).forEach(b=&gt;b.addEventListener(&#x27;click&#x27;,()=&gt;navigator.clipboard.writeText(b.getAttribute(&#x27;data-val&#x27;)).then(()=&gt;alert(&#x27;已复制到剪贴板&#x27;))));</span><br><span class="line"></span><br><span class="line">  entry.done = true;</span><br><span class="line">  entry.uploading = false;</span><br><span class="line">  entry.statusEl.textContent = &#x27;完成&#x27;;</span><br><span class="line">  entry.speedEl.textContent = &#x27;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function limitConcurrency(tasks, limit=3)&#123;</span><br><span class="line">  // 简易并发控制，避免同时过多连接</span><br><span class="line">  let i=0, running=0;</span><br><span class="line">  return new Promise((resolve,reject)=&gt;&#123;</span><br><span class="line">    const results = [];</span><br><span class="line">    const next = ()=&gt;&#123;</span><br><span class="line">      if(i&gt;=tasks.length &amp;&amp; running===0) return resolve(results);</span><br><span class="line">      while(running&lt;limit &amp;&amp; i&lt;tasks.length)&#123;</span><br><span class="line">        const cur = i++;</span><br><span class="line">        running++;</span><br><span class="line">        tasks[cur]().then(r=&gt;&#123; results[cur]=r; running--; next(); &#125;).catch(e=&gt;&#123; running--; console.error(e); next(); &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    next();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">uploadForm.addEventListener(&#x27;submit&#x27;, async (e) =&gt; &#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  // 防止重复点击提交导致重复上传</span><br><span class="line">  if (uploadBtn.dataset.running === &#x27;1&#x27;) return;</span><br><span class="line">  const pending = selected.filter(x=&gt;!x.done &amp;&amp; !x.uploading);</span><br><span class="line">  if (!pending.length) return;</span><br><span class="line">  uploadBtn.dataset.running = &#x27;1&#x27;;</span><br><span class="line">  uploadBtn.disabled = true;</span><br><span class="line"></span><br><span class="line">  const tasks = pending.map(entry =&gt; async ()=&gt; &#123;</span><br><span class="line">    try &#123; await uploadOne(entry); &#125; catch(e)&#123; entry.statusEl.textContent = &#x27;失败&#x27;; entry.uploading=false; console.error(e); &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  await limitConcurrency(tasks, 3);</span><br><span class="line"></span><br><span class="line">  // 允许再次手动点击重新上传未完成/失败的条目；不自动清空已选文件</span><br><span class="line">  uploadBtn.dataset.running = &#x27;0&#x27;;</span><br><span class="line">  uploadBtn.disabled = selected.filter(x=&gt;!x.done).length===0;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 工具</span><br><span class="line">document.addEventListener(&#x27;click&#x27;,(e)=&gt;&#123;</span><br><span class="line">  const tgt = e.target.closest(&#x27;[data-target]&#x27;);</span><br><span class="line">  if(!tgt) return;</span><br><span class="line">  const id = tgt.getAttribute(&#x27;data-target&#x27;);</span><br><span class="line">  const val = document.getElementById(id)?.value;</span><br><span class="line">  if(val) navigator.clipboard.writeText(val).then(()=&gt;alert(&#x27;已复制到剪贴板&#x27;));</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;`;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 后台管理页（尺寸统一；标题与模块左边对齐在一条线上）</span><br><span class="line">function getAdminPage() &#123;</span><br><span class="line">  return `&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">&lt;title&gt;无限制容量网盘-更多项目：www.l42.cn&lt;/title&gt;</span><br><span class="line">&lt;link href=&quot;https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .upload-area &#123; border: 2px dashed #4F46E5; &#125;</span><br><span class="line">  .upload-area.dragging &#123; background: rgba(79,70,229,0.1); &#125;</span><br><span class="line">  .card &#123; max-width: 64rem; &#125; /* 统一模块最大宽度 */</span><br><span class="line">  /* —— 新增：让标题容器与卡片同宽，并补齐与卡片相同的水平内边距，实现左侧完全对齐 */</span><br><span class="line">  .title-wrap &#123; max-width: 64rem; margin: 0 auto; padding-left: 1.5rem; padding-right: 1.5rem; &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body class=&quot;bg-gray-900 min-h-screen&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;container mx-auto px-4 py-8&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;title-wrap flex items-center justify-between mb-6&quot;&gt;</span><br><span class="line">      &lt;h1 class=&quot;text-2xl font-bold text-white&quot;&gt;无限制容量网盘-更多项目：www.l42.cn&lt;/h1&gt;</span><br><span class="line">      &lt;a class=&quot;inline-flex items-center gap-2 text-gray-200 hover:text-white&quot; href=&quot;/&quot; title=&quot;前台上传&quot;&gt;前台上传&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 管理上传（支持多选并发；尺寸统一） --&gt;</span><br><span class="line">    &lt;div class=&quot;card bg-gray-800 rounded-lg shadow p-6 mb-8 mx-auto&quot;&gt;</span><br><span class="line">      &lt;h2 class=&quot;text-white font-semibold mb-4&quot;&gt;上传文件（可多选）&lt;/h2&gt;</span><br><span class="line">      &lt;form class=&quot;space-y-4&quot; id=&quot;uploadForm&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;upload-area rounded-lg p-6 text-center cursor-pointer&quot; id=&quot;dropZone&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;space-y-2&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;text-3xl&quot;&gt;📁&lt;/span&gt;</span><br><span class="line">            &lt;p class=&quot;text-white&quot;&gt;拖拽或点击选择文件（可多选，智能分片）&lt;/p&gt;</span><br><span class="line">            &lt;p class=&quot;text-gray-400 text-xs&quot;&gt;视频≤50MB、图片≤10MB不分片；其余/超限按10MB分片&lt;/p&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;input type=&quot;file&quot; id=&quot;fileInput&quot; multiple class=&quot;hidden&quot;&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div id=&quot;filesList&quot; class=&quot;space-y-3&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class=&quot;flex gap-3&quot;&gt;</span><br><span class="line">          &lt;button type=&quot;submit&quot; id=&quot;uploadBtn&quot; class=&quot;bg-indigo-600 text-white px-5 py-2 rounded hover:bg-indigo-700 disabled:opacity-50&quot; disabled&gt;开始上传&lt;/button&gt;</span><br><span class="line">          &lt;button type=&quot;button&quot; id=&quot;refreshBtn&quot; class=&quot;bg-gray-700 text-white px-4 py-2 rounded hover:bg-gray-600&quot;&gt;刷新列表&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div id=&quot;links&quot; class=&quot;hidden text-sm text-gray-300 mt-3&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 排序（尺寸统一） --&gt;</span><br><span class="line">    &lt;div class=&quot;card bg-gray-800 rounded-lg shadow p-6 mb-4 mx-auto&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;flex flex-wrap gap-4 items-center&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;text-white font-semibold&quot;&gt;文件列表&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;text-sm text-gray-300&quot;&gt;排序：</span><br><span class="line">          &lt;select id=&quot;sortBy&quot; class=&quot;bg-gray-700 text-white rounded px-2 py-1&quot;&gt;</span><br><span class="line">            &lt;option value=&quot;date&quot;&gt;日期&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;name&quot;&gt;名称&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;type&quot;&gt;类型&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;size&quot;&gt;大小&lt;/option&gt;</span><br><span class="line">          &lt;/select&gt;</span><br><span class="line">          &lt;select id=&quot;order&quot; class=&quot;bg-gray-700 text-white rounded px-2 py-1&quot;&gt;</span><br><span class="line">            &lt;option value=&quot;desc&quot;&gt;↓&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;asc&quot;&gt;↑&lt;/option&gt;</span><br><span class="line">          &lt;/select&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;card mx-auto&quot;&gt;</span><br><span class="line">      &lt;div id=&quot;list&quot; class=&quot;grid gap-4&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div id=&quot;empty&quot; class=&quot;hidden text-center text-gray-300 py-12&quot;&gt;暂无文件&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">const listEl = document.getElementById(&#x27;list&#x27;);</span><br><span class="line">const emptyEl = document.getElementById(&#x27;empty&#x27;);</span><br><span class="line">const sortByEl = document.getElementById(&#x27;sortBy&#x27;);</span><br><span class="line">const orderEl = document.getElementById(&#x27;order&#x27;);</span><br><span class="line">const refreshBtn = document.getElementById(&#x27;refreshBtn&#x27;);</span><br><span class="line"></span><br><span class="line">sortByEl.addEventListener(&#x27;change&#x27;, load);</span><br><span class="line">orderEl.addEventListener(&#x27;change&#x27;, load);</span><br><span class="line">refreshBtn.addEventListener(&#x27;click&#x27;, load);</span><br><span class="line"></span><br><span class="line">async function load()&#123;</span><br><span class="line">  listEl.innerHTML = &#x27;&#x27;;</span><br><span class="line">  const sort = sortByEl.value;</span><br><span class="line">  const order = orderEl.value;</span><br><span class="line">  const noCache = &#x27;t=&#x27; + Date.now(); // 强制避开缓存</span><br><span class="line">  const resp = await fetch(\`/api/files?sort=\$&#123;sort&#125;&amp;order=\$&#123;order&#125;&amp;\$&#123;noCache&#125;\`, &#123; cache: &#x27;no-store&#x27; &#125;);</span><br><span class="line">  const data = await resp.json().catch(()=&gt;(&#123;files:[]&#125;));</span><br><span class="line">  const files = data.files || [];</span><br><span class="line">  if(!files.length)&#123; emptyEl.classList.remove(&#x27;hidden&#x27;); return; &#125;</span><br><span class="line">  emptyEl.classList.add(&#x27;hidden&#x27;);</span><br><span class="line">  listEl.innerHTML = files.map(renderItem).join(&#x27;&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function renderItem(f)&#123;</span><br><span class="line">  const size = formatFileSize(f.size||0);</span><br><span class="line">  const uploaded = new Date(f.uploadDate).toLocaleString();</span><br><span class="line">  const icon = getIcon(f.fileType);</span><br><span class="line">  const previewUrl = f.previewUrl || (&#x27;/preview/&#x27;+f.uploadId);</span><br><span class="line">  return \`</span><br><span class="line">    &lt;div class=&quot;bg-gray-800 p-5 rounded-lg shadow&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;flex gap-4&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;text-4xl&quot;&gt;\$&#123;icon&#125;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;flex-1 min-w-0&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;text-white font-semibold truncate&quot;&gt;\$&#123;f.title&#125;&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;text-gray-400 text-sm mt-1 space-y-1&quot;&gt;</span><br><span class="line">            &lt;div&gt;类型：\$&#123;f.fileType&#125;&lt;/div&gt;</span><br><span class="line">            &lt;div&gt;大小：\$&#123;size&#125;&lt;/div&gt;</span><br><span class="line">            &lt;div&gt;时间：\$&#123;uploaded&#125;&lt;/div&gt;</span><br><span class="line">            &lt;div&gt;分片：\$&#123;f.parts || 1&#125;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;mt-3 flex flex-wrap gap-2&quot;&gt;</span><br><span class="line">            &lt;a class=&quot;bg-indigo-600 text-white px-3 py-1 rounded hover:bg-indigo-700&quot; href=&quot;\$&#123;previewUrl&#125;&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;预览&lt;/a&gt;</span><br><span class="line">            &lt;a class=&quot;bg-gray-700 text-white px-3 py-1 rounded hover:bg-gray-600&quot; href=&quot;\$&#123;f.downloadUrl&#125;&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载&lt;/a&gt;</span><br><span class="line">            &lt;button class=&quot;bg-green-700 text-white px-3 py-1 rounded hover:bg-green-600&quot; onclick=&quot;copy(&#x27;\$&#123;f.downloadUrl&#125;&#x27;)&quot;&gt;复制下载链接&lt;/button&gt;</span><br><span class="line">            &lt;button class=&quot;bg-red-700 text-white px-3 py-1 rounded hover:bg-red-600&quot; onclick=&quot;del(&#x27;\$&#123;encodeURIComponent(f.key)&#125;&#x27;)&quot;&gt;删除&lt;/button&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;\`;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function getIcon(type)&#123;</span><br><span class="line">  const map = &#123;</span><br><span class="line">    &#x27;PDF Document&#x27;:&#x27;📄&#x27;,&#x27;Word Document&#x27;:&#x27;📝&#x27;,&#x27;Excel Spreadsheet&#x27;:&#x27;📊&#x27;,&#x27;Image&#x27;:&#x27;🖼️&#x27;,</span><br><span class="line">    &#x27;Archive&#x27;:&#x27;📦&#x27;,&#x27;Text File&#x27;:&#x27;📃&#x27;,&#x27;Video&#x27;:&#x27;🎥&#x27;,&#x27;Audio&#x27;:&#x27;🎵&#x27;,&#x27;Other&#x27;:&#x27;📎&#x27;</span><br><span class="line">  &#125;;</span><br><span class="line">  return map[type] || &#x27;📎&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function formatFileSize(bytes)&#123;</span><br><span class="line">  if (!bytes) return &#x27;0 Bytes&#x27;;</span><br><span class="line">  const k = 1024; const sizes = [&#x27;Bytes&#x27;,&#x27;KB&#x27;,&#x27;MB&#x27;,&#x27;GB&#x27;,&#x27;TB&#x27;];</span><br><span class="line">  const i = Math.floor(Math.log(bytes)/Math.log(k));</span><br><span class="line">  return (bytes/Math.pow(k,i)).toFixed(2) + &#x27; &#x27; + sizes[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function del(key)&#123;</span><br><span class="line">  if(!confirm(&#x27;确认删除该文件及其上传记录？&#x27;)) return;</span><br><span class="line">  await fetch(&#x27;/delete/&#x27;+key, &#123; method:&#x27;DELETE&#x27;, cache:&#x27;no-store&#x27; &#125;);</span><br><span class="line">  await load();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function copy(text)&#123; navigator.clipboard.writeText(text).then(()=&gt;alert(&#x27;已复制&#x27;)); &#125;</span><br><span class="line"></span><br><span class="line">// ========== 管理页多文件并发上传（与前台一致的规则，不清空选择，防重复提交） ==========</span><br><span class="line">const dz = document.getElementById(&#x27;dropZone&#x27;);</span><br><span class="line">const fi = document.getElementById(&#x27;fileInput&#x27;);</span><br><span class="line">const form = document.getElementById(&#x27;uploadForm&#x27;);</span><br><span class="line">const filesList = document.getElementById(&#x27;filesList&#x27;);</span><br><span class="line">const ub = document.getElementById(&#x27;uploadBtn&#x27;);</span><br><span class="line">const links = document.getElementById(&#x27;links&#x27;);</span><br><span class="line"></span><br><span class="line">let selected = [];</span><br><span class="line"></span><br><span class="line">dz.addEventListener(&#x27;click&#x27;, ()=&gt;fi.click());</span><br><span class="line">dz.addEventListener(&#x27;dragover&#x27;, e=&gt;&#123; e.preventDefault(); dz.classList.add(&#x27;dragging&#x27;); &#125;);</span><br><span class="line">dz.addEventListener(&#x27;dragleave&#x27;, ()=&gt;dz.classList.remove(&#x27;dragging&#x27;));</span><br><span class="line">dz.addEventListener(&#x27;drop&#x27;, e=&gt;&#123;</span><br><span class="line">  e.preventDefault(); dz.classList.remove(&#x27;dragging&#x27;);</span><br><span class="line">  if(e.dataTransfer.files.length)&#123; addFiles([...e.dataTransfer.files]); &#125;</span><br><span class="line">&#125;);</span><br><span class="line">fi.addEventListener(&#x27;change&#x27;, ()=&gt;&#123; if(fi.files.length) addFiles([...fi.files]); &#125;);</span><br><span class="line"></span><br><span class="line">function addFiles(files)&#123;</span><br><span class="line">  for(const f of files)&#123;</span><br><span class="line">    const id = crypto.randomUUID();</span><br><span class="line">    const row = document.createElement(&#x27;div&#x27;);</span><br><span class="line">    row.className = &#x27;bg-gray-700 p-4 rounded-lg file-row&#x27;;</span><br><span class="line">    row.innerHTML = \`</span><br><span class="line">      &lt;div class=&quot;flex items-center justify-between gap-3&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;min-w-0&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;text-white font-medium truncate&quot;&gt;\$&#123;f.name&#125;&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;text-gray-300 text-xs mt-1&quot;&gt;\$&#123;formatFileSize(f.size)&#125; · \$&#123;f.type || &#x27;application/octet-stream&#x27;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;button type=&quot;button&quot; class=&quot;text-red-300 hover:text-red-200 shrink-0&quot; data-act=&quot;remove&quot;&gt;移除&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;mt-3&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;w-full bg-gray-600 rounded h-3 overflow-hidden&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;h-3 bg-indigo-500&quot; style=&quot;width:0%&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;flex justify-between text-xs text-gray-300 mt-1&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;status&quot;&gt;待上传&lt;/span&gt;</span><br><span class="line">          &lt;span class=&quot;speed&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;\`;</span><br><span class="line">    filesList.appendChild(row);</span><br><span class="line">    const progressEl = row.querySelector(&#x27;.h-3&#x27;);</span><br><span class="line">    const statusEl = row.querySelector(&#x27;.status&#x27;);</span><br><span class="line">    const speedEl = row.querySelector(&#x27;.speed&#x27;);</span><br><span class="line">    row.addEventListener(&#x27;click&#x27;,(ev)=&gt;&#123;</span><br><span class="line">      if(ev.target &amp;&amp; ev.target.getAttribute(&#x27;data-act&#x27;)===&#x27;remove&#x27;)&#123;</span><br><span class="line">        const idx = selected.findIndex(x=&gt;x.id===id);</span><br><span class="line">        if(idx&gt;=0 &amp;&amp; !selected[idx].uploading)&#123;</span><br><span class="line">          selected.splice(idx,1);</span><br><span class="line">          row.remove();</span><br><span class="line">          ub.disabled = selected.filter(x=&gt;!x.done).length===0;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    selected.push(&#123; file:f, id, rowEl:row, progressEl, statusEl, speedEl, done:false, uploading:false &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  ub.disabled = selected.filter(x=&gt;!x.done).length===0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function needChunk(file)&#123;</span><br><span class="line">  const isVideo = (file.type||&#x27;&#x27;).startsWith(&#x27;video/&#x27;);</span><br><span class="line">  const isImage = (file.type||&#x27;&#x27;).startsWith(&#x27;image/&#x27;);</span><br><span class="line">  if (isVideo) return file.size &gt; 50*1024*1024;</span><br><span class="line">  if (isImage) return file.size &gt; 10*1024*1024;</span><br><span class="line">  return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function uploadOne(entry)&#123;</span><br><span class="line">  const file = entry.file;</span><br><span class="line">  entry.uploading = true;</span><br><span class="line">  entry.statusEl.textContent = &#x27;初始化...&#x27;;</span><br><span class="line">  const initResp = await fetch(&#x27;/upload/init&#x27;,&#123; method:&#x27;POST&#x27;, headers:&#123;&#x27;Content-Type&#x27;:&#x27;application/json&#x27;&#125;,</span><br><span class="line">    body: JSON.stringify(&#123; fileName:file.name, size:file.size, mime:file.type &#125;)&#125;);</span><br><span class="line">  const initData = await initResp.json().catch(()=&gt; (&#123;&#125;));</span><br><span class="line">  if(!initResp.ok || !initData.uploadId) throw new Error(&#x27;初始化失败&#x27;);</span><br><span class="line">  const uploadId = initData.uploadId;</span><br><span class="line">  const chunking = needChunk(file);</span><br><span class="line">  const chunkSize = chunking ? (initData.chunkSize || $&#123;CHUNK_SIZE&#125;) : file.size;</span><br><span class="line">  const total = Math.ceil(file.size/chunkSize);</span><br><span class="line"></span><br><span class="line">  let uploadedBytes = 0, lastTime=Date.now(), lastUploaded=0;</span><br><span class="line"></span><br><span class="line">  for(let i=0;i&lt;total;i++)&#123;</span><br><span class="line">    const start=i*chunkSize, end=Math.min(start+chunkSize, file.size);</span><br><span class="line">    const blob=file.slice(start,end);</span><br><span class="line">    await new Promise((resolve,reject)=&gt;&#123;</span><br><span class="line">      const xhr=new XMLHttpRequest();</span><br><span class="line">      xhr.open(&#x27;POST&#x27;,&#x27;/upload/chunk&#x27;);</span><br><span class="line">      xhr.onload=()=&gt;&#123; if(xhr.status&gt;=200 &amp;&amp; xhr.status&lt;300)&#123; uploadedBytes+=blob.size; resolve(); &#125; else reject(new Error(&#x27;chunk failed&#x27;)); &#125;</span><br><span class="line">      xhr.onerror=()=&gt;reject(new Error(&#x27;network&#x27;));</span><br><span class="line">      xhr.upload.onprogress=(ev)=&gt;&#123;</span><br><span class="line">        const current = ev.lengthComputable ? ev.loaded : 0;</span><br><span class="line">        const pct = Math.min((uploadedBytes + current)/file.size*100, 100);</span><br><span class="line">        entry.progressEl.style.width = pct.toFixed(2)+&#x27;%&#x27;; entry.statusEl.textContent = pct.toFixed(2)+&#x27;%&#x27;;</span><br><span class="line">        const now=Date.now(); if(now-lastTime&gt;=500)&#123; const bps=((uploadedBytes+current)-lastUploaded)/((now-lastTime)/1000); entry.speedEl.textContent=humanSpeed(bps); lastTime=now; lastUploaded=uploadedBytes+current; &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      const form=new FormData();</span><br><span class="line">      form.append(&#x27;uploadId&#x27;, uploadId);</span><br><span class="line">      form.append(&#x27;index&#x27;, String(i));</span><br><span class="line">      form.append(&#x27;total&#x27;, String(total));</span><br><span class="line">      form.append(&#x27;fileName&#x27;, file.name);</span><br><span class="line">      form.append(&#x27;chunk&#x27;, blob, chunking ? \`\$&#123;file.name&#125;.part\$&#123;i&#125;\` : file.name);</span><br><span class="line">      xhr.send(form);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  entry.statusEl.textContent = &#x27;合并登记...&#x27;;</span><br><span class="line">  const completeResp = await fetch(&#x27;/upload/complete&#x27;, &#123; method:&#x27;POST&#x27;, headers:&#123;&#x27;Content-Type&#x27;:&#x27;application/json&#x27;&#125;, body: JSON.stringify(&#123; uploadId, total &#125;)&#125;);</span><br><span class="line">  const done = await completeResp.json().catch(()=&gt; (&#123;&#125;));</span><br><span class="line">  if(!completeResp.ok || !done.downloadUrl)&#123; entry.statusEl.textContent=&#x27;失败&#x27;; entry.uploading=false; throw new Error(&#x27;完成失败&#x27;); &#125;</span><br><span class="line"></span><br><span class="line">  // 累计展示链接，不清空原文件</span><br><span class="line">  links.classList.remove(&#x27;hidden&#x27;);</span><br><span class="line">  const line = document.createElement(&#x27;div&#x27;);</span><br><span class="line">  line.innerHTML = \`&lt;div class=&quot;mt-2&quot;&gt;下载：&lt;a class=&quot;text-indigo-400 underline&quot; href=&quot;\$&#123;done.downloadUrl&#125;&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;\$&#123;done.downloadUrl&#125;&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">                     &lt;div&gt;预览：&lt;a class=&quot;text-indigo-400 underline&quot; href=&quot;\$&#123;done.previewUrl&#125;&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;\$&#123;done.previewUrl&#125;&lt;/a&gt;&lt;/div&gt;\`;</span><br><span class="line">  links.appendChild(line);</span><br><span class="line"></span><br><span class="line">  entry.done = true;</span><br><span class="line">  entry.uploading = false;</span><br><span class="line">  entry.statusEl.textContent = &#x27;完成&#x27;;</span><br><span class="line">  entry.speedEl.textContent = &#x27;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function humanSpeed(bps)&#123;</span><br><span class="line">  const units=[&#x27;B/s&#x27;,&#x27;KB/s&#x27;,&#x27;MB/s&#x27;,&#x27;GB/s&#x27;]; let i=0;</span><br><span class="line">  while(bps&gt;=1024 &amp;&amp; i&lt;units.length-1)&#123; bps/=1024; i++; &#125;</span><br><span class="line">  return bps.toFixed(1)+&#x27; &#x27;+units[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function limitConcurrency(tasks, limit=3)&#123;</span><br><span class="line">  let i=0, running=0;</span><br><span class="line">  return new Promise((resolve)=&gt;&#123;</span><br><span class="line">    const next=()=&gt;&#123;</span><br><span class="line">      if(i&gt;=tasks.length &amp;&amp; running===0) return resolve();</span><br><span class="line">      while(running&lt;limit &amp;&amp; i&lt;tasks.length)&#123;</span><br><span class="line">        const cur=i++; running++;</span><br><span class="line">        tasks[cur]().finally(()=&gt;&#123; running--; next(); &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    next();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">form.addEventListener(&#x27;submit&#x27;, async (e)=&gt;&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">  if(ub.dataset.running===&#x27;1&#x27;) return;</span><br><span class="line">  const pending = selected.filter(x=&gt;!x.done &amp;&amp; !x.uploading);</span><br><span class="line">  if(!pending.length) return;</span><br><span class="line">  ub.dataset.running=&#x27;1&#x27;; ub.disabled = true;</span><br><span class="line"></span><br><span class="line">  const tasks = pending.map(entry=&gt;()=&gt;uploadOne(entry));</span><br><span class="line">  await limitConcurrency(tasks, 3);</span><br><span class="line"></span><br><span class="line">  ub.dataset.running=&#x27;0&#x27;;</span><br><span class="line">  ub.disabled = selected.filter(x=&gt;!x.done).length===0;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">window.addEventListener(&#x27;load&#x27;, load);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;`;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// ---- SVG 图标 ----</span><br><span class="line">function svgGithub() &#123;</span><br><span class="line">  return `&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; fill=&quot;#e5e7eb&quot; viewBox=&quot;0 0 24 24&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M12 .5A11.5 11.5 0 0 0 .5 12.4c0 5.26 3.41 9.72 8.15 11.3.6.11.82-.27.82-.6l-.01-2.1c-3.32.74-4.02-1.6-4.02-1.6-.55-1.43-1.35-1.8-1.35-1.8-1.1-.78.08-.76.08-.76 1.22.09 1.86 1.29 1.86 1.29 1.08 1.86 2.83 1.32 3.52 1.01.11-.8.42-1.33.77-1.63-2.65-.31-5.44-1.36-5.44-6.07 0-1.34.47-2.43 1.25-3.29-.13-.31-.54-1.56.12-3.26 0 0 1.01-.33 3.3 1.26.96-.27 1.99-.41 3.01-.42 1.02.01 2.05.15 3.01.42 2.29-1.59 3.3-1.26 3.3-1.26.66 1.7.25 2.95.12 3.26.78.86 1.25 1.95 1.25 3.29 0 4.72-2.8 5.75-5.47 6.06.43.37.82 1.1.82 2.22l-.01 3.29c0 .33.22.72.83.6A11.51 11.51 0 0 0 23.5 12.4 11.5 11.5 0 0 0 12 .5z&quot;/&gt;&lt;/svg&gt;`;</span><br><span class="line">&#125;</span><br><span class="line">function svgLink() &#123;</span><br><span class="line">  return `&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; fill=&quot;#e5e7eb&quot; viewBox=&quot;0 0 24 24&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M3.9 12a5 5 0 0 1 5-5h3v2h-3a3 3 0 0 0 0 6h3v2h-3a5 5 0 0 1-5-5Zm7-1h3a3 3 0 0 1 0 6h-3v-2h3a1 1 0 1 0 0-2h-3v-2Zm0-2V7h3a5 5 0 0 1 0 10h-3v-2&quot;/&gt;&lt;/svg&gt;`;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub图像化使用工具</title>
      <link href="/2025/08/25/2025.08.19_github%E5%9B%BE%E5%83%8F%E5%8C%96%E4%BD%BF%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
      <url>/2025/08/25/2025.08.19_github%E5%9B%BE%E5%83%8F%E5%8C%96%E4%BD%BF%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h3 id="GitHubDesktop：https-cloud-anjing-eu-org-file-CGCgQLv0-exe"><a href="#GitHubDesktop：https-cloud-anjing-eu-org-file-CGCgQLv0-exe" class="headerlink" title="GitHubDesktop：https://cloud.anjing.eu.org/file/CGCgQLv0.exe"></a>GitHubDesktop：<a href="https://cloud.anjing.eu.org/file/CGCgQLv0.exe">https://cloud.anjing.eu.org/file/CGCgQLv0.exe</a><a href="https://cloud.anjing.eu.org/file/CGCgQLv0.exe"></a></h3><h3 id="GitHub汉化工具：https-cloud-anjing-eu-org-file-2Ues1Y0y-7z"><a href="#GitHub汉化工具：https-cloud-anjing-eu-org-file-2Ues1Y0y-7z" class="headerlink" title="GitHub汉化工具：https://cloud.anjing.eu.org/file/2Ues1Y0y.7z"></a>GitHub汉化工具：<a href="https://cloud.anjing.eu.org/file/2Ues1Y0y.7z">https://cloud.anjing.eu.org/file/2Ues1Y0y.7z</a><a href="https://cloud.anjing.eu.org/file/2Ues1Y0y.7z"></a></h3>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软路由科学上网插件</title>
      <link href="/2025/08/25/2025.08.21_%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%8F%92%E4%BB%B6/"/>
      <url>/2025/08/25/2025.08.21_%E8%BD%AF%E8%B7%AF%E7%94%B1%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>链接地址：<a href="https://github.com/AUK9527/Are-u-ok/tree/main">https://github.com/AUK9527/Are-u-ok/tree/main</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 共计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群晖docker老版本下载（ContainerManager-x86）</title>
      <link href="/2025/08/25/2025.08.21_%E7%BE%A4%E6%99%96docker%E8%80%81%E7%89%88%E6%9C%AC%E4%B8%8B%E8%BD%BD%EF%BC%88containermanager-x86%EF%BC%89/"/>
      <url>/2025/08/25/2025.08.21_%E7%BE%A4%E6%99%96docker%E8%80%81%E7%89%88%E6%9C%AC%E4%B8%8B%E8%BD%BD%EF%BC%88containermanager-x86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>最新可以编辑的版本：<a href="https://global.synologydownload.com/download/Package/spk/ContainerManager/20.10.23-1437/ContainerManager-x86_64-20.10.23-1437.spk">https://global.synologydownload.com/download/Package/spk/ContainerManager/20.10.23-1437/ContainerManager-x86_64-20.10.23-1437.spk</a><a href="https://global.synologydownload.com/download/Package/spk/ContainerManager/20.10.23-1437/ContainerManager-x86_64-20.10.23-1437.spk"></a></p><p>更多版本：<a href="https://archive.synology.cn/download/Package/ContainerManager">https://archive.synology.cn/download/Package/ContainerManager</a></p><p>其他套件：<a href="https://archive.synology.cn/download">https://archive.synology.cn/download</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 群晖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑群晖一键修复：Advanced Media Extensions激活补丁</title>
      <link href="/2025/08/25/2025.08.21_%E9%BB%91%E7%BE%A4%E6%99%96%E4%B8%80%E9%94%AE%E4%BF%AE%E5%A4%8D%EF%BC%9Aadvanced-media-extensions%E6%BF%80%E6%B4%BB%E8%A1%A5%E4%B8%81/"/>
      <url>/2025/08/25/2025.08.21_%E9%BB%91%E7%BE%A4%E6%99%96%E4%B8%80%E9%94%AE%E4%BF%AE%E5%A4%8D%EF%BC%9Aadvanced-media-extensions%E6%BF%80%E6%B4%BB%E8%A1%A5%E4%B8%81/</url>
      
        <content type="html"><![CDATA[<p>只适用于x86_64的：DSM7.x Advanced Media Extensions (AME)版本3.0.1-2004、3.1.0-3005</p><p>激活过程需要下载官方的解码包，过程较慢，耐心等待。。。</p><h4 id="DSM7-1和7-2的AME版本不同，脚本不通用！！！！！！只适用于x86-64的，不支持armv8"><a href="#DSM7-1和7-2的AME版本不同，脚本不通用！！！！！！只适用于x86-64的，不支持armv8" class="headerlink" title="DSM7.1和7.2的AME版本不同，脚本不通用！！！！！！只适用于x86_64的，不支持armv8"></a>DSM7.1和7.2的AME版本不同，脚本不通用！！！！！！只适用于x86_64的，不支持armv8</h4><p>2023.12.5更新，集成了关闭apparmor保护，一直无法激活的可卸载AME、重启系统后重新安装再试试。</p><p>1、# DSM7.1 AME版本3.0.1-2004</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L http://code.imnks.com/ame3patch/ame71-2004.py | python</span><br></pre></td></tr></table></figure><p>2、# DSM7.2 AME版本3.1.0-3005（适合sa6400）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L http://code.imnks.com/ame3patch/ame72-3005.py | python</span><br></pre></td></tr></table></figure><p>来源：<a href="https://xpenology.com/forum/topic/65643-ame-30-patcher/">https://xpenology.com/forum/topic/65643-ame-30-patcher/</a></p><p>3、备用脚本（jim）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L http://code.imnks.com/ame3patch/ame72-3005.sh | bash</span><br></pre></td></tr></table></figure><p>详细信息：<a href="https://imnks.com/385.html">https://imnks.com/385.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 群晖nas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WordPress如何绑定多个域名教程</title>
      <link href="/2025/08/25/2025.08.21_wordpress%E5%A6%82%E4%BD%95%E7%BB%91%E5%AE%9A%E5%A4%9A%E4%B8%AA%E5%9F%9F%E5%90%8D%E6%95%99%E7%A8%8B/"/>
      <url>/2025/08/25/2025.08.21_wordpress%E5%A6%82%E4%BD%95%E7%BB%91%E5%AE%9A%E5%A4%9A%E4%B8%AA%E5%9F%9F%E5%90%8D%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; padding-top: 56.25%; margin: 20px 0; border-radius: 8px; overflow: hidden; background: #000;"><iframe  style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"  src="https://player.bilibili.com/player.html?bvid=BV1wV4y1Q7ZQ&page=1&autoplay=0&high_quality=1"  scrolling="no"  frameborder="no"  allowfullscreen></iframe></div><p>使用过wordpress的站长应该都清楚，wordpress在安装的时候会默认绑定当前的域名，后续绑定其他的域名但是页面的链接也还是安装时候的域名。那么今天给大家分享一下wordpress绑定多个域名或者取消域名绑定限制的方法。</p><p>1、打开网站根目录下的wp-config.php，在<code>define(&#39;WP_DEBUG&#39;, false);</code>后面添加下面内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">define(&#x27;WP_SITEURL&#x27;, &#x27;http://&#x27; . $_SERVER[&#x27;HTTP_HOST&#x27;]);</span><br><span class="line">define(&#x27;WP_HOME&#x27;, &#x27;http://&#x27; . $_SERVER[&#x27;HTTP_HOST&#x27;]);</span><br><span class="line">define( &#x27;WP_CONTENT_URL&#x27;,  &#x27;//&#x27; . $_SERVER[&#x27;HTTP_HOST&#x27;] . &#x27;/wp-content&#x27;);</span><br></pre></td></tr></table></figure><p>2、群晖部署的输入下面代码才有删除、读取权限，放底部就行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">define(&quot;FS_METHOD&quot;, &quot;direct&quot;);</span><br><span class="line">define(&quot;FS_CHMOD_DIR&quot;, 0777); </span><br><span class="line">define(&quot;FS_CHMOD_FILE&quot;, 0777);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> WordPress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu切换root</title>
      <link href="/2025/08/25/2025.08.21_ubuntu%E5%88%87%E6%8D%A2root/"/>
      <url>/2025/08/25/2025.08.21_ubuntu%E5%88%87%E6%8D%A2root/</url>
      
        <content type="html"><![CDATA[<p>一、进入管理员</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><p>二、修改密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><p>然后输入密码（这个时候输入密码是不显示的）</p><p>三、</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>四、输入“i”进入插入模式</p><p>显示– INSERT –说明进入插入模式。</p><p>找到：<br>#LoginGraceTime 2m<br>#PermitRootLogin prohibit-password</p><p>在下面输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitRootlogin yes</span><br></pre></td></tr></table></figure><p>五、保存</p><p>按esc键盘，输入：wq保存</p><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart ssh</span><br></pre></td></tr></table></figure><p>重启ssh</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>N1盒子docker安装</title>
      <link href="/2025/08/25/2025.08.21_n1%E7%9B%92%E5%AD%90docker%E5%AE%89%E8%A3%85/"/>
      <url>/2025/08/25/2025.08.21_n1%E7%9B%92%E5%AD%90docker%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>安装科学上网插件：<a href="https://github.com/AUK9527/Are-u-ok/tree/main/apps">https://github.com/AUK9527/Are-u-ok/tree/main/apps</a></p><p>有科学上网略过</p><p>x-ui安装:打开终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir x-ui &amp;&amp; cd x-ui</span><br><span class="line">wget https://raw.githubusercontent.com//enwaiax/x-ui/main/docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install docker-compose</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p>编辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><p>输入“i”</p><p>把：enwaiax&#x2F;x-ui改成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enwaiax/x-ui:alpha-zh</span><br></pre></td></tr></table></figure><p>unless-stopped改成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">always</span><br></pre></td></tr></table></figure><p>按键:“esc”</p><p>输入：wq</p><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>x-ui网站：<a href="https://hub.docker.com/r/enwaiax/x-ui">https://hub.docker.com/r/enwaiax/x-ui</a></p><p>cf内网穿透示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run  --restart=always cloudflare/cloudflared:latest tunnel --no-autoupdate run --token eyJhIjoiMDRiNGQyNDExN2E2YTRhNDllNTkyNWNlZTYyYzc2OTIiLCJ0IjoiZmJmMDJhNGQtNjdiOC00MjlmLTk0YjAtMzk3MGVmMzFjNDViIiwicyI6Ik1qbGtOalJsTVRNdE56STNZaTAwTXprekxUazNNMlF0TVdNNVpHSXlaREk0TnpjeSJ9</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EdgeOne-Pages缩短网站链接</title>
      <link href="/2025/08/25/2025.08.21_edgeone-pages%E7%BC%A9%E7%9F%AD%E7%BD%91%E7%AB%99%E9%93%BE%E6%8E%A5/"/>
      <url>/2025/08/25/2025.08.21_edgeone-pages%E7%BC%A9%E7%9F%AD%E7%BD%91%E7%AB%99%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<p>蓝奏云：<a href="https://wwhk.lanzoub.com/iYHRw30zatpi">https://wwhk.lanzoub.com/iYHRw30zatpi</a></p><p>备用链接：<a href="https://cloud.anjing.eu.org/file/6lH9x616.zip">https://cloud.anjing.eu.org/file/6lH9x616.zip</a></p><p><a href="https://cloud.anjing.eu.org/file/6lH9x616.zip"></a><br>KV空间都要改成：LINKS</p><p>项目作者github：<a href="https://github.com/hobk/eo-short">https://github.com/hobk/eo-short</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7新装系统更新</title>
      <link href="/2025/08/25/2025.08.21_centos7%E6%96%B0%E8%A3%85%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0/"/>
      <url>/2025/08/25/2025.08.21_centos7%E6%96%B0%E8%A3%85%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="执行如下命令安装新的源："><a href="#执行如下命令安装新的源：" class="headerlink" title="执行如下命令安装新的源："></a>执行如下命令安装新的源：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><h3 id="若显示wget命令不存在"><a href="#若显示wget命令不存在" class="headerlink" title="若显示wget命令不存在"></a>若显示wget命令不存在</h3><p>需手动替换CentOS-Base.repo这个文件（文件路径：&#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo），替换成如下内容，建议直接复制粘贴替换原文件的内容，直接写入可能不生效：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># CentOS-Base.repo</span><br><span class="line">#</span><br><span class="line"># The mirror system uses the connecting IP address of the client and the</span><br><span class="line"># update status of each mirror to pick mirrors that are updated to and</span><br><span class="line"># geographically close to the client.  You should use this for CentOS updates</span><br><span class="line"># unless you are manually picking other mirrors.</span><br><span class="line">#</span><br><span class="line"># If the mirrorlist= does not work for you, as a fall back you can try the </span><br><span class="line"># remarked out baseurl= line instead.</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"> </span><br><span class="line">[base]</span><br><span class="line">name=CentOS-$releasever - Base - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/$releasever/os/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/$releasever/os/$basearch/</span><br><span class="line">        http://mirrors.cloud.aliyuncs.com/centos/$releasever/os/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#released updates </span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-$releasever - Updates - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/$releasever/updates/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/$releasever/updates/$basearch/</span><br><span class="line">        http://mirrors.cloud.aliyuncs.com/centos/$releasever/updates/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#additional packages that may be useful</span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-$releasever - Extras - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/$releasever/extras/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/$releasever/extras/$basearch/</span><br><span class="line">        http://mirrors.cloud.aliyuncs.com/centos/$releasever/extras/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#additional packages that extend functionality of existing packages</span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-$releasever - Plus - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">        http://mirrors.cloud.aliyuncs.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line">#contrib - packages by Centos Users</span><br><span class="line">[contrib]</span><br><span class="line">name=CentOS-$releasever - Contrib - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/$releasever/contrib/$basearch/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/$releasever/contrib/$basearch/</span><br><span class="line">        http://mirrors.cloud.aliyuncs.com/centos/$releasever/contrib/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure><p>最后执行如下命令完成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br><span class="line"> </span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://blog.csdn.net/m0_73646990/article/details/142096520">https://blog.csdn.net/m0_73646990/article/details/142096520</a></p><p>然后安装：wget工具</p><p>安装命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install wget</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
